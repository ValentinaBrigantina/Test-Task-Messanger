/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedFormImport } from './routes/authenticatedForm'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AdminAuthenticatedImport } from './routes/_adminAuthenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedChatLayoutImport } from './routes/_authenticated/_chatLayout'
import { Route as AdminAuthenticatedAdminImport } from './routes/_adminAuthenticated/admin'
import { Route as AuthenticatedChatLayoutChatImport } from './routes/_authenticated/_chatLayout/chat'
import { Route as AuthenticatedChatLayoutChatChannelIdImport } from './routes/_authenticated/_chatLayout/chat.$channelId'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedFormRoute = AuthenticatedFormImport.update({
  id: '/authenticatedForm',
  path: '/authenticatedForm',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AdminAuthenticatedRoute = AdminAuthenticatedImport.update({
  id: '/_adminAuthenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedChatLayoutRoute = AuthenticatedChatLayoutImport.update({
  id: '/_chatLayout',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AdminAuthenticatedAdminRoute = AdminAuthenticatedAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AdminAuthenticatedRoute,
} as any)

const AuthenticatedChatLayoutChatRoute =
  AuthenticatedChatLayoutChatImport.update({
    id: '/chat',
    path: '/chat',
    getParentRoute: () => AuthenticatedChatLayoutRoute,
  } as any)

const AuthenticatedChatLayoutChatChannelIdRoute =
  AuthenticatedChatLayoutChatChannelIdImport.update({
    id: '/$channelId',
    path: '/$channelId',
    getParentRoute: () => AuthenticatedChatLayoutChatRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_adminAuthenticated': {
      id: '/_adminAuthenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminAuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/authenticatedForm': {
      id: '/authenticatedForm'
      path: '/authenticatedForm'
      fullPath: '/authenticatedForm'
      preLoaderRoute: typeof AuthenticatedFormImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_adminAuthenticated/admin': {
      id: '/_adminAuthenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAuthenticatedAdminImport
      parentRoute: typeof AdminAuthenticatedImport
    }
    '/_authenticated/_chatLayout': {
      id: '/_authenticated/_chatLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedChatLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_chatLayout/chat': {
      id: '/_authenticated/_chatLayout/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthenticatedChatLayoutChatImport
      parentRoute: typeof AuthenticatedChatLayoutImport
    }
    '/_authenticated/_chatLayout/chat/$channelId': {
      id: '/_authenticated/_chatLayout/chat/$channelId'
      path: '/$channelId'
      fullPath: '/chat/$channelId'
      preLoaderRoute: typeof AuthenticatedChatLayoutChatChannelIdImport
      parentRoute: typeof AuthenticatedChatLayoutChatImport
    }
  }
}

// Create and export the route tree

interface AdminAuthenticatedRouteChildren {
  AdminAuthenticatedAdminRoute: typeof AdminAuthenticatedAdminRoute
}

const AdminAuthenticatedRouteChildren: AdminAuthenticatedRouteChildren = {
  AdminAuthenticatedAdminRoute: AdminAuthenticatedAdminRoute,
}

const AdminAuthenticatedRouteWithChildren =
  AdminAuthenticatedRoute._addFileChildren(AdminAuthenticatedRouteChildren)

interface AuthenticatedChatLayoutChatRouteChildren {
  AuthenticatedChatLayoutChatChannelIdRoute: typeof AuthenticatedChatLayoutChatChannelIdRoute
}

const AuthenticatedChatLayoutChatRouteChildren: AuthenticatedChatLayoutChatRouteChildren =
  {
    AuthenticatedChatLayoutChatChannelIdRoute:
      AuthenticatedChatLayoutChatChannelIdRoute,
  }

const AuthenticatedChatLayoutChatRouteWithChildren =
  AuthenticatedChatLayoutChatRoute._addFileChildren(
    AuthenticatedChatLayoutChatRouteChildren,
  )

interface AuthenticatedChatLayoutRouteChildren {
  AuthenticatedChatLayoutChatRoute: typeof AuthenticatedChatLayoutChatRouteWithChildren
}

const AuthenticatedChatLayoutRouteChildren: AuthenticatedChatLayoutRouteChildren =
  {
    AuthenticatedChatLayoutChatRoute:
      AuthenticatedChatLayoutChatRouteWithChildren,
  }

const AuthenticatedChatLayoutRouteWithChildren =
  AuthenticatedChatLayoutRoute._addFileChildren(
    AuthenticatedChatLayoutRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedChatLayoutRoute: typeof AuthenticatedChatLayoutRouteWithChildren
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedChatLayoutRoute: AuthenticatedChatLayoutRouteWithChildren,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedChatLayoutRouteWithChildren
  '/authenticatedForm': typeof AuthenticatedFormRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin': typeof AdminAuthenticatedAdminRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/chat': typeof AuthenticatedChatLayoutChatRouteWithChildren
  '/chat/$channelId': typeof AuthenticatedChatLayoutChatChannelIdRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedChatLayoutRouteWithChildren
  '/authenticatedForm': typeof AuthenticatedFormRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/admin': typeof AdminAuthenticatedAdminRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
  '/chat': typeof AuthenticatedChatLayoutChatRouteWithChildren
  '/chat/$channelId': typeof AuthenticatedChatLayoutChatChannelIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_adminAuthenticated': typeof AdminAuthenticatedRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/authenticatedForm': typeof AuthenticatedFormRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_adminAuthenticated/admin': typeof AdminAuthenticatedAdminRoute
  '/_authenticated/_chatLayout': typeof AuthenticatedChatLayoutRouteWithChildren
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/_chatLayout/chat': typeof AuthenticatedChatLayoutChatRouteWithChildren
  '/_authenticated/_chatLayout/chat/$channelId': typeof AuthenticatedChatLayoutChatChannelIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/authenticatedForm'
    | '/login'
    | '/register'
    | '/admin'
    | '/profile'
    | '/'
    | '/chat'
    | '/chat/$channelId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/authenticatedForm'
    | '/login'
    | '/register'
    | '/admin'
    | '/profile'
    | '/'
    | '/chat'
    | '/chat/$channelId'
  id:
    | '__root__'
    | '/_adminAuthenticated'
    | '/_authenticated'
    | '/authenticatedForm'
    | '/login'
    | '/register'
    | '/_adminAuthenticated/admin'
    | '/_authenticated/_chatLayout'
    | '/_authenticated/profile'
    | '/_authenticated/'
    | '/_authenticated/_chatLayout/chat'
    | '/_authenticated/_chatLayout/chat/$channelId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AdminAuthenticatedRoute: typeof AdminAuthenticatedRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthenticatedFormRoute: typeof AuthenticatedFormRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AdminAuthenticatedRoute: AdminAuthenticatedRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthenticatedFormRoute: AuthenticatedFormRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_adminAuthenticated",
        "/_authenticated",
        "/authenticatedForm",
        "/login",
        "/register"
      ]
    },
    "/_adminAuthenticated": {
      "filePath": "_adminAuthenticated.tsx",
      "children": [
        "/_adminAuthenticated/admin"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_chatLayout",
        "/_authenticated/profile",
        "/_authenticated/"
      ]
    },
    "/authenticatedForm": {
      "filePath": "authenticatedForm.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_adminAuthenticated/admin": {
      "filePath": "_adminAuthenticated/admin.tsx",
      "parent": "/_adminAuthenticated"
    },
    "/_authenticated/_chatLayout": {
      "filePath": "_authenticated/_chatLayout.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_chatLayout/chat"
      ]
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_chatLayout/chat": {
      "filePath": "_authenticated/_chatLayout/chat.tsx",
      "parent": "/_authenticated/_chatLayout",
      "children": [
        "/_authenticated/_chatLayout/chat/$channelId"
      ]
    },
    "/_authenticated/_chatLayout/chat/$channelId": {
      "filePath": "_authenticated/_chatLayout/chat.$channelId.tsx",
      "parent": "/_authenticated/_chatLayout/chat"
    }
  }
}
ROUTE_MANIFEST_END */
